[{"content":"Proses Bernoulli Suatu eksperimen biasanya dilakukan percobaan secara berulang-ulang. Setiap perulangan tersebut menghasilkan dua kemungkinan hasil yaitu berhasil atau gagal. Proses ini kemudian disebut sebagai proses bernoulli (Bernoulli Process). Setiap percobaannya disebut sebagai percobaan bernoulli (Bernoulli Trial).\nProses Bernoulli harus memiliki sifat-sifat berikut berikut:\n Percobaan terdiri dari percobaan berulang. Setiap percobaan hasilnya dapat diklasifikasikan sebagai sukses atau gagal. Probabilitas keberhasilan, dilambangkan dengan p dan tetap konstan dari percobaan ke percobaan. Uji coba berulang bersifat independen.  Distribusi Binomial Jumlah X keberhasilan dalam n percobaan Bernoulli disebut binomial random variable. Selanjutnya, distribusi probabilitas random variable diskrit ini disebut distribusi binomial dimana nilainya akan dilambangkan dengan \\(b(x; n, p)\\) karena bergantung pada jumlah percobaan dan probabilitas keberhasilan pada percobaan tertentu.\n","date":"2020-12-24T00:00:00Z","permalink":"https://kamui.netlify.app/p/komstat-8-distribusi-peluang/","title":"KOMSTAT 8 : Distribusi Peluang"},{"content":"Test R Script dulu\npaste(\u0026#39;Alhamdulillah bisa bikin postngan pertama hehehe :D\u0026#39;) ## [1] \u0026quot;Alhamdulillah bisa bikin postngan pertama hehehe :D\u0026quot;\rSip mantap\u0026hellip;\n","date":"2020-12-10T00:00:00Z","permalink":"https://kamui.netlify.app/p/fisrt-post/","title":"Fisrt Post"},{"content":"Selain web server, Apache juga dapat dikonfigurasi sebagai Reverse Proxy untuk membuat cluster load balancing dari dua atau lebih server web. Fungsionalitas ini dapat ditambahkan ke Apache melalui modul mod_proxy.\nPersiapan Untuk dapat mengikuti tutorial ini, Anda harus mempersiapkan beberapa hal sebagai berikut :\nMenyiapkan Sistem Operasi Dalam implementasinya tidak dianjurkan untuk menggunakan loadbalancing pada satu komputer yang sama. Namun, sebagai latihan tutorial ini menggunakan tiga buah virtual machine dengan virtualbox dengan spesifikasi sebagai berikut :\n   Hostname IP Address OS     Centos 7 loadbalancer 192.168.43.71 Centos 7 64 bit   Centos 7 Server 1 192.168.43.92 Centos 7 64 bit   Centos 7 Server 2 192.168.43.65 Centos 7 64 bit    Install Essential Tools net-tools\nyum install net-tools\rnano\nyum install nano\rInstall Apache Install apache server untuk ketiga virtual machine yang sudah disediakan sebelumnya dengan perintah\nInstall apache\nyum install httpd Enable service httpd\nsystemctl enable httpd\rStart service httpd\nsystemctl start httpd\rBuka firewall service http/port 80\nfirewall-cmd --permanent --add-service=http\rReload Firewall\nfirewall-cmd --reload\rPastikan ketiga server tersebut bisa diakses dari luar VM. Akses http://(ip / domain)/ pada browser komputer. contoh http://192.168.43.71/\nKonfigurasi Loadbalancer Apache HTTP Server membutuhkan modul mod_proxy agar dapat berfungsi sebagai Load Balancer. Modul mod_proxy sudah tersedia dalam paket httpd, oleh karena itu secara otomatis terinstall Bersama Apache HTTP Server pada CentOS 7.\nGunakan perintah berikut untuk memverifikasi ketersediaan mod_proxy pada server loadbalancer.\nhttpd â€“M | grep proxy\rBuat sebuah file konfigurasi pada server loadbalancer dengan perintah berikut\nnano /etc/httpd/conf.d/lbsisjarkom.conf\rMasukkan script konfigurasi berikut ini\n\u0026lt;proxy balancer://mycluster\u0026gt;\rBalancerMember http://192.168.43.92:80\rBalancerMember http://192.168.43.65:80\rProxySet lbmethod=byrequests\r\u0026lt;/proxy\u0026gt;\r\u0026lt;Location /balancer-manager\u0026gt;\rSetHandler balancer-manager\rallow from all\r\u0026lt;/Location\u0026gt;\rProxyPass /balancer-manager !\rProxyPass / balancer://mycluster/\rProxyPassReverse / balancer://mycluster/\rRestart service httpd dengan perintah berikut\nsystemctl restart httpd\rAkses Loadbalancer melalui browser\nhttp://192.168.43.71/\rAkses loadbaancer manager\nhttp://192.168.43.71/balancer-manager\rKonfigurasi Server 1 dan Server 2 Buat sebuah file html pada server 1 dan server 2 dengan perintah berikut\nnano /var/www/html/index.html\rMasukkan Script berikut kedalam file index.html yang sudah dibuat\n\u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Server 1\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt; Selamat Datang di Server 1\u0026lt;/h1\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; server 2 menyesuaikan\nAkses Loadbalancer melalui browser\nhttp://192.168.43.71/\rReload browser, Loadbalancer akan mengakses server 1 dan server 2 secara bergantian\nBagaimana jika salah satu server mati ? Matikan salah satu server dengan perintah berikut\nsystemctl stop httpd\rMaka loadbalancer akan mengakses server yang masih aktif dan server yang mati statusnya akan error\nBagaimana jika kedua server mati ? Matikan kedua server dan reload browsernya maka status kedua server menjadi error dan akan muncul status error 503 Service Unavailable\nMengamankan Balancer Manager Buat user baru pada sistem\nhtpasswd -c /etc/httpd/htpasswd admin\rGanti kode pada file konfigurasi loadbalancer\nnano /etc/httpd/conf.d/lbsisjarkom.conf\rGanti\n\u0026lt;Location /balancer-manager\u0026gt;\rSetHandler balancer-manager\rallow from all\r\u0026lt;/Location\u0026gt;\rMenjadi\n\u0026lt;location \u0026quot;/balancer-manager\u0026quot;\u0026gt; SetHandler balancer-manager AuthType \u0026quot;basic\u0026quot; AuthName \u0026quot;balancer-manager\u0026quot; AuthUserFile /etc/httpd/htpasswd Require valid-user \u0026lt;/location\u0026gt;\rRestart service httpd dengan perintah berikut\nsystemctl restart httpd\rAkses Loadbalancer manager, maka nanti akan muncul jendela untuk melakukan auntentikasi\n","date":"2020-12-10T00:00:00Z","permalink":"https://kamui.netlify.app/p/implementasi-loadbalancing-server-dengan-reverse-proxy-apache-di-centos-7/","title":"Implementasi Loadbalancing Server Dengan Reverse Proxy Apache di Centos 7"}]