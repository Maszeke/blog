[{"content":"Soal Dari library(nycflights13), gunakan dataset flights, airports, airlines, planes, dan weather. Kemudian lakukan :\n Buat bar-chart untuk urutan 10 maskapai penerbangan airlines (lengkap dengan nama maskapainya) dengan rata-rata waktu keterlambatan keberangkatan (departure delay) paling lama Uji apakah terdapat beda rata-rata jarak yang ditempuh dari pesawat yang dibuat sebelum tahun 2000 dan setelah (termasuk) tahun 2000 Uji apakah terdapat beda rata-rata waktu keterlambatan keberangkatan dari empat musim (winter: oct-jan, spring: feb-may, summer: june-sept). Lakukan uji lanjutan jika diperlukan. Berdasarkan data diatas, maskapai mana yang paling bagus kinerjanya serta berikan alasannya  Jawab Nomor 1 Perintah : Membuat bar-chart untuk rata-rata waktu keterlambatan keberangkatan (departure delay) paling lama\nLangkah-langkah :\n Load data  library(nycflights13) ## Warning: package 'nycflights13' was built under R version 3.6.3\rlibrary(dplyr) ## Warning: package 'dplyr' was built under R version 3.6.3\r## ## Attaching package: 'dplyr'\r## The following objects are masked from 'package:stats':\r## ## filter, lag\r## The following objects are masked from 'package:base':\r## ## intersect, setdiff, setequal, union\rhead(flights) ## # A tibble: 6 x 19\r## year month day dep_time sched_dep_time dep_delay arr_time sched_arr_time\r## \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt;\r## 1 2013 1 1 517 515 2 830 819\r## 2 2013 1 1 533 529 4 850 830\r## 3 2013 1 1 542 540 2 923 850\r## 4 2013 1 1 544 545 -1 1004 1022\r## 5 2013 1 1 554 600 -6 812 837\r## 6 2013 1 1 554 558 -4 740 728\r## # ... with 11 more variables: arr_delay \u0026lt;dbl\u0026gt;, carrier \u0026lt;chr\u0026gt;, flight \u0026lt;int\u0026gt;,\r## # tailnum \u0026lt;chr\u0026gt;, origin \u0026lt;chr\u0026gt;, dest \u0026lt;chr\u0026gt;, air_time \u0026lt;dbl\u0026gt;, distance \u0026lt;dbl\u0026gt;,\r## # hour \u0026lt;dbl\u0026gt;, minute \u0026lt;dbl\u0026gt;, time_hour \u0026lt;dttm\u0026gt;\r Summeries data berdasarkan maskapai carrier dengan rata-rata Keterlambatan keberangktaan ```dep_delay``  data = summarise(group_by(flights, carrier), mean_dep_delay = mean(dep_delay, na.rm = TRUE)) ## `summarise()` ungrouping output (override with `.groups` argument)\rdata = arrange(data, desc(mean_dep_delay))  Buat barplot dari data tersebut  barplot(data$mean_dep_delay, main=\u0026#34;Car Distribution\u0026#34;, names.arg=data$carrier) ","date":"2020-12-29T00:00:00Z","permalink":"https://kamui.netlify.app/p/uas-komputasi-statistik-2019-d4ks-nomor-1/","title":"UAS Komputasi Statistik 2019 D4KS Nomor 1"},{"content":"Proses Bernoulli Suatu eksperimen biasanya dilakukan percobaan secara berulang-ulang. Setiap perulangan tersebut menghasilkan dua kemungkinan hasil yaitu berhasil atau gagal. Proses ini kemudian disebut sebagai proses bernoulli (Bernoulli Process). Setiap percobaannya disebut sebagai percobaan bernoulli (Bernoulli Trial).\nProses Bernoulli harus memiliki sifat-sifat berikut berikut:\n Percobaan terdiri dari percobaan berulang. Setiap percobaan hasilnya dapat diklasifikasikan sebagai sukses atau gagal. Probabilitas keberhasilan, dilambangkan dengan p dan tetap konstan dari percobaan ke percobaan. Uji coba berulang bersifat independen.  Distribusi Binomial Jumlah X keberhasilan dalam n percobaan Bernoulli disebut binomial random variable. Selanjutnya, distribusi probabilitas random variable diskrit ini disebut distribusi binomial dimana nilainya akan dilambangkan dengan $ b(x; n, p) $ karena bergantung pada jumlah percobaan dan probabilitas keberhasilan pada percobaan tertentu.\nDistribusi binomial dalam R dbinom() dbinom(x, size, prob, log = FALSE)\rFungsi dbinom mengembalikan nilai fungsi kepadatan peluang (pdf) dari distribusi binomial yang diberikan variabel acak tertentu x, jumlah percobaan (size) dan probabilitas keberhasilan pada setiap percobaan (prob).\nContoh Soal\nSasha flips a fair coin 20 times. What is the probability that the coin lands on heads exactly 7 times?\n#find the probability of 7 successes during 20 trials where the probability of #success on each trial is 0.5 dbinom(x=7, size=20, prob=.5) ## [1] 0.07392883\rpbinom() pbinom(q, size, prob, lower.tail = TRUE, log.p = FALSE)\rFungsi pbinom mengembalikan nilai fungsi kepadatan kumulatif (cdf) dari distribusi binomial dengan variabel acak tertentu q, jumlah percobaan (size) dan probabilitas keberhasilan pada setiap percobaan (prob).\nContoh Soal\nAndo flips a fair coin 5 times. What is the probability that the coin lands on heads more than 2 times?\n#find the probability of more than 2 successes during 5 trials where the #probability of success on each trial is 0.5 pbinom(2, size=5, prob=.5, lower.tail=FALSE) ## [1] 0.5\rqbinom() qbinom(p, size, prob, lower.tail = TRUE, log.p = FALSE)\rFungsi qbinom mengembalikan nilai fungsi inverse kepadatan kumulatif (cdf) dari distribusi binomial yang diberi variabel acak tertentu p, jumlah percobaan (size) dan probabilitas keberhasilan pada setiap percobaan (prob).\nContoh Soal\n#find the 10th quantile of a binomial distribution with 10 trials and prob #of success on each trial = 0.4 qbinom(.10, size=10, prob=.4) ## [1] 2\r#find the 40th quantile of a binomial distribution with 30 trials and prob #of success on each trial = 0.25 qbinom(.40, size=30, prob=.25) ## [1] 7\rrbinom() rbinom(n, size, prob)\rFungsi rbinom menghasilkan vektor variabel acak terdistribusi binomial dengan panjang vektor n, jumlah percobaan (size) dan probabilitas keberhasilan pada setiap percobaan (prob).\nContoh Soal\n#generate a vector that shows the number of successes of 10 binomial experiments with #100 trials where the probability of success on each trial is 0.3. results \u0026lt;- rbinom(10, size=100, prob=.3) results ## [1] 32 28 29 26 24 27 34 36 30 26\r#find mean number of successes in the 10 experiments (compared to expected #mean of 30) mean(results) ## [1] 29.2\r#generate a vector that shows the number of successes of 1000 binomial experiments #with 100 trials where the probability of success on each trial is 0.3. results \u0026lt;- rbinom(1000, size=100, prob=.3) #find mean number of successes in the 100 experiments (compared to expected #mean of 30) mean(results) ## [1] 30.221\rlog.p : logical; if TRUE, probabilities p are given as log(p).\nContoh Soal 1\nSebuah koin dilempar 10 kali. Berapa peluang bahwa akan muncul tepat angka sebanyak 6 kali?\nJawab :\nsize =10; prob = 0.5; x = 6 dbinom(6, 10, 0.5) ## [1] 0.2050781\rpbinom(6, 10, 0.5) #kumulatif mulai dari muncul 0 kali hingga 6 kali ## [1] 0.828125\r","date":"2020-12-24T00:00:00Z","permalink":"https://kamui.netlify.app/p/komstat-8-distribusi-peluang/","title":"KOMSTAT 8 : Distribusi Peluang"},{"content":"Test R Script dulu\npaste(\u0026#39;Alhamdulillah bisa bikin postngan pertama hehehe :D\u0026#39;) ## [1] \u0026quot;Alhamdulillah bisa bikin postngan pertama hehehe :D\u0026quot;\rSip mantap\u0026hellip;\n","date":"2020-12-10T00:00:00Z","permalink":"https://kamui.netlify.app/p/fisrt-post/","title":"Fisrt Post"},{"content":"Selain web server, Apache juga dapat dikonfigurasi sebagai Reverse Proxy untuk membuat cluster load balancing dari dua atau lebih server web. Fungsionalitas ini dapat ditambahkan ke Apache melalui modul mod_proxy.\nPersiapan Untuk dapat mengikuti tutorial ini, Anda harus mempersiapkan beberapa hal sebagai berikut :\nMenyiapkan Sistem Operasi Dalam implementasinya tidak dianjurkan untuk menggunakan loadbalancing pada satu komputer yang sama. Namun, sebagai latihan tutorial ini menggunakan tiga buah virtual machine dengan virtualbox dengan spesifikasi sebagai berikut :\n   Hostname IP Address OS     Centos 7 loadbalancer 192.168.43.71 Centos 7 64 bit   Centos 7 Server 1 192.168.43.92 Centos 7 64 bit   Centos 7 Server 2 192.168.43.65 Centos 7 64 bit    Install Essential Tools net-tools\nyum install net-tools\rnano\nyum install nano\rInstall Apache Install apache server untuk ketiga virtual machine yang sudah disediakan sebelumnya dengan perintah\nInstall apache\nyum install httpd Enable service httpd\nsystemctl enable httpd\rStart service httpd\nsystemctl start httpd\rBuka firewall service http/port 80\nfirewall-cmd --permanent --add-service=http\rReload Firewall\nfirewall-cmd --reload\rPastikan ketiga server tersebut bisa diakses dari luar VM. Akses http://(ip / domain)/ pada browser komputer. contoh http://192.168.43.71/\nKonfigurasi Loadbalancer Apache HTTP Server membutuhkan modul mod_proxy agar dapat berfungsi sebagai Load Balancer. Modul mod_proxy sudah tersedia dalam paket httpd, oleh karena itu secara otomatis terinstall Bersama Apache HTTP Server pada CentOS 7.\nGunakan perintah berikut untuk memverifikasi ketersediaan mod_proxy pada server loadbalancer.\nhttpd â€“M | grep proxy\rBuat sebuah file konfigurasi pada server loadbalancer dengan perintah berikut\nnano /etc/httpd/conf.d/lbsisjarkom.conf\rMasukkan script konfigurasi berikut ini\n\u0026lt;proxy balancer://mycluster\u0026gt;\rBalancerMember http://192.168.43.92:80\rBalancerMember http://192.168.43.65:80\rProxySet lbmethod=byrequests\r\u0026lt;/proxy\u0026gt;\r\u0026lt;Location /balancer-manager\u0026gt;\rSetHandler balancer-manager\rallow from all\r\u0026lt;/Location\u0026gt;\rProxyPass /balancer-manager !\rProxyPass / balancer://mycluster/\rProxyPassReverse / balancer://mycluster/\rRestart service httpd dengan perintah berikut\nsystemctl restart httpd\rAkses Loadbalancer melalui browser\nhttp://192.168.43.71/\rAkses loadbaancer manager\nhttp://192.168.43.71/balancer-manager\rKonfigurasi Server 1 dan Server 2 Buat sebuah file html pada server 1 dan server 2 dengan perintah berikut\nnano /var/www/html/index.html\rMasukkan Script berikut kedalam file index.html yang sudah dibuat\n\u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Server 1\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt; Selamat Datang di Server 1\u0026lt;/h1\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; server 2 menyesuaikan\nAkses Loadbalancer melalui browser\nhttp://192.168.43.71/\rReload browser, Loadbalancer akan mengakses server 1 dan server 2 secara bergantian\nBagaimana jika salah satu server mati ? Matikan salah satu server dengan perintah berikut\nsystemctl stop httpd\rMaka loadbalancer akan mengakses server yang masih aktif dan server yang mati statusnya akan error\nBagaimana jika kedua server mati ? Matikan kedua server dan reload browsernya maka status kedua server menjadi error dan akan muncul status error 503 Service Unavailable\nMengamankan Balancer Manager Buat user baru pada sistem\nhtpasswd -c /etc/httpd/htpasswd admin\rGanti kode pada file konfigurasi loadbalancer\nnano /etc/httpd/conf.d/lbsisjarkom.conf\rGanti\n\u0026lt;Location /balancer-manager\u0026gt;\rSetHandler balancer-manager\rallow from all\r\u0026lt;/Location\u0026gt;\rMenjadi\n\u0026lt;location \u0026quot;/balancer-manager\u0026quot;\u0026gt; SetHandler balancer-manager AuthType \u0026quot;basic\u0026quot; AuthName \u0026quot;balancer-manager\u0026quot; AuthUserFile /etc/httpd/htpasswd Require valid-user \u0026lt;/location\u0026gt;\rRestart service httpd dengan perintah berikut\nsystemctl restart httpd\rAkses Loadbalancer manager, maka nanti akan muncul jendela untuk melakukan auntentikasi\n","date":"2020-12-10T00:00:00Z","permalink":"https://kamui.netlify.app/p/implementasi-loadbalancing-server-dengan-reverse-proxy-apache-di-centos-7/","title":"Implementasi Loadbalancing Server Dengan Reverse Proxy Apache di Centos 7"}]